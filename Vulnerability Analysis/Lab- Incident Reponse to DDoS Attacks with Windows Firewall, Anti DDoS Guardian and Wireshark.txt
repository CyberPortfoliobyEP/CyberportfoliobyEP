# **Lab Report: Conducting and Mitigating DDoS Attacks with Windows Firewall, Anti DDoS Guardian, and Wireshark**

---

## **Lab Details**

- **Lab Name:** Conducting and Mitigating DDoS Attacks  
- **Lab Environment:**  
  - **Windows 11 (Victim System):** IP: `10.10.1.11`  
  - **Windows Server 2019 (Attacker):** IP: `10.10.1.19`  
  - **Windows Server 2022 (Attacker):** IP: `10.10.1.22`  
- **Lab Objective:**  
  - Simulate a DDoS attack on Windows 11 and implement countermeasures.  
- **Tools Used:**  
  - Attack Tools: ISB, UltraDDOS-v2  
  - Defense Tools: Anti DDoS Guardian, Microsoft Defender Firewall, Wireshark  

---

## **Introduction**

This lab demonstrates how to conduct a DDoS attack and mitigate it using effective measures. The goal is to analyze the impact of a TCP flood attack on Windows 11 (`10.10.1.11`) and implement appropriate defenses such as firewall rules and Anti DDoS Guardian. The results are then validated using Wireshark and the Windows Resource Monitor.

---

## **Techniques and Results**

### **1. Conducting a TCP Flood Attack**

#### **Description of the Attack:**
A TCP flood attack generates massive amounts of spoofed connection requests to exhaust the target system's resources.  
- **ISB** performs targeted TCP connection attempts at high frequency, consuming system resources such as bandwidth and CPU.  
- **UltraDDOS-v2** sends millions of packets to overwhelm the target systemâ€™s network and processor resources.

---

#### **Steps:**

1. **Attack using ISB on Windows Server 2019 (`10.10.1.19`):**  
   - The ISB tool was configured to target the IP `10.10.1.11` (Windows 11) on port `80`. The parameters were set as follows:  
     - Interval: `10` ms  
     - Buffer: `256` bytes  
     - Threads: `1000`  
![ISB TCP Flood configuration and logs](https://i.imgur.com/isvIpYa.png)

   - After initiating the attack, the interface indicated that TCP flood packets were continuously being sent. The logs confirmed that the packets were successfully delivered without connection errors.

2. **Attack using UltraDDOS-v2 on Windows Server 2022 (`10.10.1.22`):**  
   - The tool was configured with the same target parameters (`10.10.1.11`, port `80`):  
     - Packets: `1,000,000`  
     - Threads: `1,000,000`  
![UltraDDOS tool sending packets](https://i.imgur.com/EumWGaa.png)
![UltraDDOS log showing packet statistics](https://i.imgur.com/pFcmrUE.png)
![Real-time packet generation interface](https://i.imgur.com/iAvd6VT.png)

   - UltraDDOS-v2 reported that millions of packets were being sent to the target system.  

3. **Impact on Windows 11 (`10.10.1.11`):**  
   - The CPU usage spiked to approximately **70%**, which could lead to potential system crashes.  
   - The system responded slowly, and network traffic was heavily impacted.  
![CPU usage during attack](https://i.imgur.com/AlaT58a.png)

**Results:**  
- Both tools caused significant strain on the target system.  
- The attack was mitigated by deploying countermeasures.  

---

### **2. Mitigation using Anti DDoS Guardian**

#### **Description of the Defense:**  
Anti DDoS Guardian monitors incoming traffic in real time, detects suspicious IP addresses, and blocks them either manually or automatically.

---

#### **Steps:** 

1. **Launching the Tool on Windows 11 (`10.10.1.11`):**  
   - Anti DDoS Guardian was launched, and incoming traffic was monitored.

2. **Detecting the Attacker IPs:**  
   - IPs generating excessive traffic were identified:  
     - `10.10.1.19` (Windows Server 2019)  
     - `10.10.1.22` (Windows Server 2022)  

3. **Blocking the IPs:**  
   - These IPs were manually blocked via the Anti DDoS Guardian interface.  
![Anti DDoS Guardian blocking suspicious traffic](https://i.imgur.com/xLpWWGN.png)

**Results:**  
- Traffic from the attacker IPs was effectively blocked.  

---

### **3. Configuring Firewall Rules in Microsoft Defender**

#### **Description:**  
The attacker IPs were blocked in the Microsoft Defender Firewall to ensure that no traffic from these sources was processed.

#### **Steps:**
1. **Accessing the Firewall Settings:**  
   - Firewall rules were configured via **Windows Security > Firewall & Network Protection > Advanced Settings**.

2. **Creating a New Rule:**  
   - A **custom rule** was created that included both attacker IPs (`10.10.1.19` and `10.10.1.22`).  
   - This rule blocked all incoming traffic from these IPs on all ports.  
![Creating a custom firewall rule](https://i.imgur.com/wyEsQs5.png)
![Blocking attacker IPs via the rule](https://i.imgur.com/ApV79ax.png)

**Results:**  
- Both IPs were successfully blocked using a single rule.  

---

### **4. Validation with Wireshark**

#### **Description:**  
Wireshark was used to analyze network traffic after implementing the mitigation measures.

#### **Steps:**
1. **Starting Wireshark on Windows 11 (`10.10.1.11`):**  
   - Live network traffic was monitored on `eth0`.  

2. **Packet Analysis:**  
   - It was confirmed that no packets were received from the blocked IPs (`10.10.1.19` and `10.10.1.22`).  
![Wireshark showing blocked traffic](https://i.imgur.com/m3JQ1Yh.png)

3. **CPU Usage Validation:**  
   - The CPU usage was also monitored simultaneously, which remained between **2% and 15%**, indicating a drastic reduction in system load.  
![CPU usage after mitigation](https://i.imgur.com/1KUOA9t.png)

**Results:**  
- Wireshark validated that no packets from the blocked IPs were processed.  

---

## **Summary**

### **Steps Performed:**
1. Simulation of a TCP flood attack using ISB and UltraDDOS-v2.  
2. Real-time mitigation using Anti DDoS Guardian and firewall rules.  
3. Validation of results with Wireshark and the Resource Monitor.  

### **Insights:**
- DDoS attacks can quickly overwhelm system resources but can be effectively mitigated with real-time monitoring and preventive measures.  
- The combination of Anti DDoS Guardian, firewall rules, and Wireshark is a robust strategy against such threats.  

### **Recommendations:**
- Regular updates and testing of defense tools.  
- Monitoring network traffic to detect unusual activity.  
- Conducting penetration tests to validate the security infrastructure.  

---